// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef COINTOOLS_SWIFT_H
#define COINTOOLS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Charts;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <CoinTools/CoinTools.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CoinTools",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UINavigationController;
@class GTSDKConfig;
@class GateHomePageController;
@class GTSDK_Main_BigOrderStatisticsViewController;
@class GTSDK_Main_NewHoldCoinViewController;
@class GTSDK_Main_BigFiguretranViewController;
@class GTSDK_Main_AnalyseDataViewController;
@class GTSDK_Main_NewCoinMessageViewController;

SWIFT_CLASS("_TtC9CoinTools8CoinTool")
@interface CoinTool : NSObject
+ (UINavigationController * _Nonnull)gtsdk_getNc SWIFT_WARN_UNUSED_RESULT;
/// 获得首页vc
+ (GateHomePageController * _Nonnull)gtsdk_getNavHomePageControllerWhitWithConfig:(GTSDKConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
/// 获取 GTSDKConfig 全局
+ (GTSDKConfig * _Nonnull)gtsdk_getConfig SWIFT_WARN_UNUSED_RESULT;
/// 大单成交vc 传入币种 - coinType
+ (GTSDK_Main_BigOrderStatisticsViewController * _Nonnull)gtsdk_getSDK_Main_BigOrderVcWhit SWIFT_WARN_UNUSED_RESULT;
/// 地址持币 vc 传入币种 - coinType
+ (GTSDK_Main_NewHoldCoinViewController * _Nonnull)gtsdk_getSDK_Main_NewHoldCoinVcWhit SWIFT_WARN_UNUSED_RESULT;
/// 大额转账  vc 传入币种 - coinType
+ (GTSDK_Main_BigFiguretranViewController * _Nonnull)gtsdk_getSDK_Main_BigFiguretranVcWhit SWIFT_WARN_UNUSED_RESULT;
/// 资金流向  vc 传入币种 - coinType
+ (GTSDK_Main_AnalyseDataViewController * _Nonnull)gtsdk_getSDK_Main_AnalyseDataVcWhit SWIFT_WARN_UNUSED_RESULT;
/// 币种信息  vc 传入币种 - coinType
+ (GTSDK_Main_NewCoinMessageViewController * _Nonnull)gtsdk_getSDK_Main_CoinMessageVcWhit SWIFT_WARN_UNUSED_RESULT;
/// GTSDKConfig - 配置
+ (void)gtsdk_configurationWithConfig:(GTSDKConfig * _Nonnull)config;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ChartDataEntry;
@class ChartViewPortHandler;
@class NSString;
@class NSNumberFormatter;

SWIFT_CLASS("_TtC9CoinTools28GTChartDefaultValueFormatter")
@interface GTChartDefaultValueFormatter : ChartDefaultValueFormatter
@property (nonatomic) NSInteger index;
- (NSString * _Nonnull)stringForValue:(double)value entry:(ChartDataEntry * _Nonnull)entry dataSetIndex:(NSInteger)dataSetIndex viewPortHandler:(ChartViewPortHandler * _Nullable)viewPortHandler SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFormatter:(NSNumberFormatter * _Nonnull)formatter OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDecimals:(NSInteger)decimals OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBlock:(NSString * _Nonnull (^ _Nonnull)(double, ChartDataEntry * _Nonnull, NSInteger, ChartViewPortHandler * _Nullable))block OBJC_DESIGNATED_INITIALIZER;
@end

@class GTHomeTitleModel;
@protocol IChartAxisValueFormatter;
@class GatePublicSelectModel;
@class LineChartView;
@class CombinedChartView;
enum GTChartPMarkerViewCalendarPermission : NSInteger;
@class GTChartPMarkerPublicView;
@class ChartHighlight;
@class NSCoder;

SWIFT_CLASS("_TtC9CoinTools18GTChartPMarkerView")
@interface GTChartPMarkerView : ChartMarkerView
@property (nonatomic, copy) NSArray * _Nonnull (^ _Nonnull cycleSelectBlock)(NSInteger);
@property (nonatomic) BOOL isMianNeight;
@property (nonatomic) BOOL is24H;
@property (nonatomic) BOOL isHiddenTime;
@property (nonatomic, copy) NSArray<GTHomeTitleModel *> * _Nullable Xmodels;
@property (nonatomic, strong) id <IChartAxisValueFormatter> _Nullable xAxisValueFormatter;
@property (nonatomic, copy) NSArray<GatePublicSelectModel *> * _Nonnull models;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nonnull stylemodels;
@property (nonatomic, copy) NSArray * _Nonnull possArr;
@property (nonatomic, strong) LineChartView * _Nullable lineChartView;
@property (nonatomic, strong) CombinedChartView * _Nullable chartsView;
@property (nonatomic, copy) NSArray<GatePublicSelectModel *> * _Nonnull selectModels;
@property (nonatomic) enum GTChartPMarkerViewCalendarPermission aleartType;
@property (nonatomic, weak) IBOutlet GTChartPMarkerPublicView * _Null_unspecified publicView;
- (void)awakeFromNib;
+ (nonnull instancetype)loadFromNib:(NSString * _Nullable)nibname SWIFT_WARN_UNUSED_RESULT;
- (void)drawWithContext:(CGContextRef _Nonnull)context point:(CGPoint)point;
- (void)refreshContentWithEntry:(ChartDataEntry * _Nonnull)entry highlight:(ChartHighlight * _Nonnull)highlight;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, GTChartPMarkerViewCalendarPermission, "AleartType", open) {
  GTChartPMarkerViewCalendarPermissionDuoKong = 10,
  GTChartPMarkerViewCalendarPermissionBaoCang = 11,
  GTChartPMarkerViewCalendarPermissionKongHuang = 12,
  GTChartPMarkerViewCalendarPermissionChiCang = 13,
  GTChartPMarkerViewCalendarPermissionDaDan = 14,
  GTChartPMarkerViewCalendarPermissionBigOrder = 15,
  GTChartPMarkerViewCalendarPermissionUpdOwnData = 16,
  GTChartPMarkerViewCalendarPermissionNewBaoCang = 17,
  GTChartPMarkerViewCalendarPermissionFearIndex = 18,
  GTChartPMarkerViewCalendarPermissionTradePairCalendar = 19,
  GTChartPMarkerViewCalendarPermissionNewTimeStamp = 20,
};


@class NSMutableArray;
@class GTPublicContentModel;
@class GTHomepage_navigationModel;
@class UICollectionView;
@class UICollectionViewLayout;
@class NSIndexPath;
@class UICollectionReusableView;
@class UICollectionViewCell;
@class NSBundle;

SWIFT_CLASS("_TtC9CoinTools24GTClassifyViewController")
@interface GTClassifyViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
@property (nonatomic, copy) NSString * _Nonnull firstTitle;
@property (nonatomic, copy) NSString * _Nonnull secondTitle;
@property (nonatomic, copy) NSString * _Nonnull centerTitle;
@property (nonatomic, copy) void (^ _Nullable skipBlock)(NSInteger, NSString * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable hidenBlock)(void);
@property (nonatomic, copy) void (^ _Nullable showBlock)(void);
@property (nonatomic, strong) NSMutableArray * _Nonnull titleModels;
@property (nonatomic, strong) NSMutableArray * _Nonnull subTitleModels;
@property (nonatomic, strong) GTPublicContentModel * _Nonnull bigTitleM;
@property (nonatomic, strong) GTHomepage_navigationModel * _Nullable homepage_navigation;
@property (nonatomic, strong) GTHomepage_navigationModel * _Nullable homesub_navigation;
@property (nonatomic, strong) GTSDKConfig * _Nullable shareConfig;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class RZFoldLabel;

SWIFT_CLASS("_TtC9CoinTools17GTCoinMessageCell")
@interface GTCoinMessageCell : UITableViewCell
@property (nonatomic, strong) NSString * _Nonnull coinUrl;
@property (nonatomic, copy) void (^ _Nullable backBlock)(BOOL);
@property (nonatomic) BOOL isIndividualNightMode;
@property (nonatomic) BOOL isFold;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified coinIcon;
@property (nonatomic, strong) RZFoldLabel * _Nonnull tex1tLabel;
@property (nonatomic, strong) GTPublicContentModel * _Nonnull dattaModel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9CoinTools19GTCombinedChartView")
@interface GTCombinedChartView : UIView
+ (UIImageView * _Nonnull)setBagIamgeViewWithBag:(UIView * _Nonnull)bag;
+ (void)setImageWithImageV:(UIImageView * _Nonnull)imageV;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class GTAlldatalistModel;
@class ChartViewBase;
@class ChartAnimator;

SWIFT_CLASS("_TtC9CoinTools17GTPublicChartCell")
@interface GTPublicChartCell : UITableViewCell <ChartViewDelegate>
@property (nonatomic) BOOL isChartline;
@property (nonatomic, copy) NSArray * _Nonnull temps;
@property (nonatomic, copy) NSArray * _Nonnull allstyleArr;
@property (nonatomic, copy) NSArray * _Nonnull dtempSets;
@property (nonatomic, strong) GTChartPMarkerView * _Nullable marker;
@property (nonatomic, copy) void (^ _Nullable Chartline)(BOOL);
@property (nonatomic, copy) void (^ _Nullable selectBlock)(void);
@property (nonatomic, copy) void (^ _Nullable tempPublicSelectModels)(NSArray<GatePublicSelectModel *> * _Nonnull, NSArray<GatePublicSelectModel *> * _Nonnull);
@property (nonatomic, copy) NSArray<GTAlldatalistModel *> * _Nonnull currentDatas;
@property (nonatomic, strong) GTPublicContentModel * _Nullable publicContentModel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)chartValueSelected:(ChartViewBase * _Nonnull)chartView entry:(ChartDataEntry * _Nonnull)entry highlight:(ChartHighlight * _Nonnull)highlight;
- (void)chartScaled:(ChartViewBase * _Nonnull)chartView scaleX:(CGFloat)scaleX scaleY:(CGFloat)scaleY;
- (void)chartTranslated:(ChartViewBase * _Nonnull)chartView dX:(CGFloat)dX dY:(CGFloat)dY;
- (void)chartViewDidEndPanning:(ChartViewBase * _Nonnull)chartView;
- (void)chartView:(ChartViewBase * _Nonnull)chartView animatorDidStop:(ChartAnimator * _Nonnull)animator;
@end

@class GTXAxisFearIndexValueFormatter;
@class GTYxisFearIndexValueFormatter;

SWIFT_CLASS("_TtC9CoinTools22GTFoundationChangeCell")
@interface GTFoundationChangeCell : GTPublicChartCell
@property (nonatomic) BOOL is24H;
@property (nonatomic, strong) GTXAxisFearIndexValueFormatter * _Nullable xXisFearIndexValueFormatter;
@property (nonatomic, strong) GTYxisFearIndexValueFormatter * _Nullable yLeftXisFearIndexValueFormatter;
@property (nonatomic, strong) GTYxisFearIndexValueFormatter * _Nullable yXisFearIndexValueFormatter;
@property (nonatomic) NSInteger index;
@property (nonatomic, strong) GTPublicContentModel * _Nullable publicContentModel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9CoinTools27GTLinkMessagesTableViewCell")
@interface GTLinkMessagesTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;

SWIFT_CLASS("_TtC9CoinTools18GTLoadImageManager")
@interface GTLoadImageManager : NSObject
+ (void)setImageWithImageeView:(UIImageView * _Nonnull)imageeView url:(NSString * _Nonnull)url placeholder_image:(UIImage * _Nonnull)placeholder_image;
+ (void)addTomaskView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC9CoinTools31GTSDKNetworkReachabilityManager")
@interface GTSDKNetworkReachabilityManager : NSObject
+ (BOOL)isNetworkConnect SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9CoinTools14GTSDKWebSocket")
@interface GTSDKWebSocket : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)r;
@end


SWIFT_CLASS("_TtC9CoinTools13GTSDK_SnapKit")
@interface GTSDK_SnapKit : NSObject
+ (void)gtSDK_makeConstraintsWithView:(UIView * _Nonnull)view relativeView:(UIView * _Nullable)relativeView top:(CGFloat)top left:(CGFloat)left bottom:(CGFloat)bottom right:(CGFloat)right height:(CGFloat)height weight:(CGFloat)weight centerX:(CGFloat)centerX centerY:(CGFloat)centerY relativeFloat:(CGFloat)relativeFloat;
+ (void)gtSDK_makeRemoveConstraintWithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraintsUpdataWeightWithView:(UIView * _Nonnull)view weight:(CGFloat)weight;
+ (void)gtSDK_UpdataWeightWithView:(UIView * _Nonnull)view weight:(CGFloat)weight;
+ (void)gtSDK_makeConstraintsUpdataBottomWithView:(UIView * _Nonnull)view bottom:(CGFloat)bottom;
+ (void)gtSDK_makeConstraintsUpdataLeftWithView:(UIView * _Nonnull)view left:(CGFloat)left;
+ (void)gtSDK_makeConstraintsUpdataLeft1WithView:(UIView * _Nonnull)view left:(CGFloat)left;
+ (void)gtSDK_makeConstraintsUpdataRightWithView:(UIView * _Nonnull)view right:(CGFloat)right;
+ (void)gtSDK_makeConstraintsUpdataHeightWithView:(UIView * _Nonnull)view Height:(CGFloat)Height;
+ (void)gtSDK_makeConstraintsUpdataTopWithView:(UIView * _Nonnull)view top:(CGFloat)top;
+ (void)gtSDK_makeConstraintsUpdataCenterXWithView:(UIView * _Nonnull)view centerX:(CGFloat)centerX;
+ (void)gtsdk_makeConstraintsUpdata_view_LeftWithView:(UIView * _Nonnull)view view1:(UIView * _Nonnull)view1 left:(CGFloat)left;
+ (void)gtSDK_makeConstraints1WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints2WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints3WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints4WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints5WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints6WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints7WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints8WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints9WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints10WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints11WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints12WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints13WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints14WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints15WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraints16WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints17WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints18WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints19WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints20WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints21WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints22WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints23WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints24WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints25WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraints26WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraints27WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints28WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints29WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints30WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints31WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints32WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints33WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints34WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraints35WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints36WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints37WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints38WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints39WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints40WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints41WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints42WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint43WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints44WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints45WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraints46WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints47WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints48WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints48WithView:(UIView * _Nonnull)view superView:(UIView * _Nonnull)superView;
+ (void)gtSDK_makeConstraints49WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints50WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints51WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints52WithView:(UIView * _Nonnull)view superView:(UIView * _Nonnull)superView;
+ (void)gtSDK_makeConstraints53WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints54WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints55WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints56WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints57WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints58WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints59WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints60WithView:(UIView * _Nonnull)view view1:(UIView * _Nonnull)view1;
+ (void)gtSDK_makeConstraints61WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints62WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints63WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints64WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints66WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints67WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints68WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints69WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints70WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints71WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints72WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints73WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints74WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints75WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints76WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints77WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints78WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints79WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints80WithView:(UIView * _Nonnull)view progressLeftSpace:(CGFloat)progressLeftSpace progressHeight:(CGFloat)progressHeight minButton:(UIView * _Nonnull)minButton;
+ (void)gtSDK_makeConstraints81WithView:(UIView * _Nonnull)view view1:(UIView * _Nonnull)view1 minButton:(UIView * _Nonnull)minButton maxButton:(UIView * _Nonnull)maxButton;
+ (void)gtSDK_makeConstraints82WithView:(UIView * _Nonnull)view view1:(UIView * _Nonnull)view1 view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints83WithView:(UIView * _Nonnull)view view1:(UIView * _Nonnull)view1 view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints84WithView:(UIView * _Nonnull)view _minButton:(UIView * _Nonnull)_minButton indicateViewWidth:(CGFloat)indicateViewWidth indicateViewOffset:(CGFloat)indicateViewOffset;
+ (void)gtSDK_makeConstraintsUpdatacenterXWithView:(UIView * _Nonnull)view _progressView:(UIView * _Nonnull)_progressView y:(CGFloat)y;
+ (void)gtSDK_makeConstraintsUpdatabottomWithView:(UIView * _Nonnull)view _maxButton:(UIView * _Nonnull)_maxButton y:(CGFloat)y;
+ (void)gtSDK_makeConstraintsUpdataWWithView:(UIView * _Nonnull)view _indicateViewWidth:(CGFloat)_indicateViewWidth;
+ (void)gtSDK_makeConstraints86WithView:(UIView * _Nonnull)view progressLeftSpace:(CGFloat)progressLeftSpace;
+ (void)gtSDK_makeConstraints87WithView:(UIView * _Nonnull)view _progressView:(UIView * _Nonnull)_progressView x:(CGFloat)x;
+ (void)gtSDK_makeConstraints88WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints89WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints90WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints91WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints92WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints93WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint94WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint95WithView:(UIView * _Nonnull)view height:(CGFloat)height;
+ (void)gtSDK_makeConstraints96WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints97WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints98WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints99WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints100WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints101WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints102WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint103WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint104WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint105WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint106WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint107WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint108WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint109WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint110WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint111WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint112WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint113WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint114WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint115WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint116WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraint118WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints119WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint120WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint122WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint123WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint124WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint125WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint126WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraint127WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint128WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint129WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraint130WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraint131WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint132WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints133WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints134WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints135WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints136WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint137WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraint138WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints139WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint140WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints141WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraint142WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint143WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint144WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint145WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint146WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_updateConstraint146WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 offSet:(CGFloat)offSet;
+ (void)gtSDK_makeConstraint147WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint148WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraint149WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint150WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint151WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint152WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint153WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint154WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint155WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint156WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint157WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints158WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints159WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints160WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints161WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints162WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints163WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints164WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints165WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints166WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints167WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints168WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints169WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints170WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints171WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints172WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)v3_gtSDK_makeEqualSuperConstraint1WithView:(UIView * _Nonnull)view;
+ (void)v3_gtSDK_makeConstraint1WithView:(UIView * _Nonnull)view;
+ (void)v3_gtSDK_makeConstraint2WithView:(UIView * _Nonnull)view bottomMargin:(CGFloat)bottomMargin;
+ (void)v3_gtSDK_makeYCenterLeftMaringConstraintWithView:(UIView * _Nonnull)view leftMargin:(CGFloat)leftMargin;
+ (void)v3_gtSDK_makeYCenterRightMaringConstraintWithView:(UIView * _Nonnull)view rightMargin:(CGFloat)rightMargin;
+ (void)v3_gtSDK_makeYCenterRightMaringSizeConstraintWithView:(UIView * _Nonnull)view rightMargin:(CGFloat)rightMargin size:(CGSize)size;
+ (void)v3_gtSDK_makeX_YCenterConstraintWithView:(UIView * _Nonnull)view;
+ (void)v3_gtSDK_makeX_YWithSizeCenterConstraintWithView:(UIView * _Nonnull)view size:(CGSize)size;
+ (void)v3_gtSDK_makeConstraint3WithView:(UIView * _Nonnull)view topMargin:(CGFloat)topMargin;
+ (void)gtSDK_makeConstraints173WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints174WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints175WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints176WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints177WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints178WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraints179WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2 view3:(UIView * _Nonnull)view3;
+ (void)gtSDK_makeConstraints180WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints181WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints182WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints183WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints184WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints185WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_updateHeightWithView:(UIView * _Nonnull)view height:(CGFloat)height;
+ (void)gtSDK_makeConstraint186WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint187WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraints188WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraints189WithView:(UIView * _Nonnull)view;
+ (void)gtSDK_makeConstraint193WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint190WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint191WithView:(UIView * _Nonnull)view view2:(UIView * _Nonnull)view2;
+ (void)gtSDK_makeConstraint192WithView:(UIView * _Nonnull)view;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9CoinTools10GTSearchBt")
@interface GTSearchBt : UIView
@property (nonatomic, copy) void (^ _Nullable searchBlock)(void);
@property (nonatomic, copy) void (^ _Nullable closeBlock)(void);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


enum GTV2ChartPMarkerViewCalendarPermission : NSInteger;

SWIFT_CLASS("_TtC9CoinTools20GTV2ChartPMarkerView")
@interface GTV2ChartPMarkerView : ChartMarkerView
@property (nonatomic, copy) NSArray * _Nonnull (^ _Nonnull cycleSelectBlock)(NSInteger);
@property (nonatomic) BOOL is24H;
@property (nonatomic) BOOL isHiddenTime;
@property (nonatomic) BOOL isMianNeight;
@property (nonatomic, strong) GatePublicSelectModel * _Nullable Xmodel;
@property (nonatomic, strong) id <IChartAxisValueFormatter> _Nullable xAxisValueFormatter;
@property (nonatomic, copy) NSArray<GatePublicSelectModel *> * _Nonnull models;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nonnull stylemodels;
@property (nonatomic, copy) NSArray * _Nonnull possArr;
@property (nonatomic, strong) LineChartView * _Nullable lineChartView;
@property (nonatomic, strong) CombinedChartView * _Nullable chartsView;
@property (nonatomic, copy) NSArray<GatePublicSelectModel *> * _Nonnull selectModels;
@property (nonatomic) enum GTV2ChartPMarkerViewCalendarPermission aleartType;
@property (nonatomic, weak) IBOutlet GTChartPMarkerPublicView * _Null_unspecified publicView;
- (void)awakeFromNib;
+ (nonnull instancetype)loadFromNib:(NSString * _Nullable)nibname SWIFT_WARN_UNUSED_RESULT;
- (void)drawWithContext:(CGContextRef _Nonnull)context point:(CGPoint)point;
- (void)refreshContentWithEntry:(ChartDataEntry * _Nonnull)entry highlight:(ChartHighlight * _Nonnull)highlight;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, GTV2ChartPMarkerViewCalendarPermission, "AleartType", open) {
  GTV2ChartPMarkerViewCalendarPermissionDuoKong = 10,
  GTV2ChartPMarkerViewCalendarPermissionBaoCang = 11,
  GTV2ChartPMarkerViewCalendarPermissionKongHuang = 12,
  GTV2ChartPMarkerViewCalendarPermissionChiCang = 13,
  GTV2ChartPMarkerViewCalendarPermissionDaDan = 14,
  GTV2ChartPMarkerViewCalendarPermissionBigOrder = 15,
  GTV2ChartPMarkerViewCalendarPermissionUpdOwnData = 16,
  GTV2ChartPMarkerViewCalendarPermissionNewBaoCang = 17,
  GTV2ChartPMarkerViewCalendarPermissionPair = 18,
  GTV2ChartPMarkerViewCalendarPermissionFearIndex = 19,
};


typedef SWIFT_ENUM(int32_t, HTNetworkStatus, open) {
  HTNetworkStatusPublicHttpUnknow = -1,
  HTNetworkStatusHttpNoReachable = 0,
  HTNetworkStatusHttpWwan = 1,
  HTNetworkStatusHttpWifi = 2,
};


SWIFT_CLASS("_TtC9CoinTools11HttpNetWork")
@interface HttpNetWork : NSObject
+ (void)getRequestWithUrl:(NSString * _Nonnull)url params:(NSDictionary<NSString *, id> * _Nullable)params success:(void (^ _Nonnull)(id _Nonnull, NSString * _Nonnull))success error:(void (^ _Nonnull)(id _Nonnull))error;
+ (void)postRequestWithUrl:(NSString * _Nonnull)url params:(NSDictionary<NSString *, id> * _Nullable)params success:(void (^ _Nonnull)(id _Nonnull, NSString * _Nonnull))success error:(void (^ _Nonnull)(id _Nonnull))error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface HttpNetWork (SWIFT_EXTENSION(CoinTools))
+ (void)netWorkReachabilityWithReachabilityStatus:(void (^ _Nonnull)(enum HTNetworkStatus))reachabilityStatus;
@end


SWIFT_CLASS("_TtC9CoinTools22LFMarketTrendFormatter")
@interface LFMarketTrendFormatter : ChartDefaultValueFormatter
@property (nonatomic) NSInteger index;
- (NSString * _Nonnull)stringForValue:(double)value entry:(ChartDataEntry * _Nonnull)entry dataSetIndex:(NSInteger)dataSetIndex viewPortHandler:(ChartViewPortHandler * _Nullable)viewPortHandler SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFormatter:(NSNumberFormatter * _Nonnull)formatter OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDecimals:(NSInteger)decimals OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBlock:(NSString * _Nonnull (^ _Nonnull)(double, ChartDataEntry * _Nonnull, NSInteger, ChartViewPortHandler * _Nullable))block OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9CoinTools16LFRequestManager")
@interface LFRequestManager : NSObject
+ (void)requestCancel;
+ (void)requestUrlCancelWithUrl:(NSString * _Nonnull)url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, MySwiftThemes, open) {
  MySwiftThemesLight = 0,
  MySwiftThemesNight = 1,
};






@class UITextView;
@class NSItemProvider;

SWIFT_CLASS("_TtC9CoinTools11RZFoldLabel")
@interface RZFoldLabel : UIView <UITextViewDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (BOOL)textViewShouldEndEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textViewShouldBeginEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canPasteItemProviders:(NSArray<NSItemProvider *> * _Nonnull)itemProviders SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL canBecomeFirstResponder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9CoinTools13TBChartMarker")
@interface TBChartMarker : ChartMarkerView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawWithContext:(CGContextRef _Nonnull)context point:(CGPoint)point;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NSURL;
@class NSTextAttachment;

SWIFT_CLASS("_TtC9CoinTools17TapActionHelperRZ")
@interface TapActionHelperRZ : NSObject <UITextViewDelegate>
- (BOOL)textViewShouldBeginEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textViewShouldEndEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=10.0);
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=10.0);
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=7.0,deprecated=10.0);
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=7.0,deprecated=10.0);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@class UIGestureRecognizer;

@interface UITextView (SWIFT_EXTENSION(CoinTools))
- (void)addGestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer;
@end





enum YCLayoutAttribute : NSInteger;

@interface UIView (SWIFT_EXTENSION(CoinTools))
- (void)yc_removeConstraints;
- (void)yc_makeLeftEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeLeftEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeLeftEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeLeftGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeLeftGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeLeftGreaterThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeLeftLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeLeftLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeLeftLessThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeRightEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeRightEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeRightEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeRightGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeRightGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeRightGreaterThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeRightLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeRightLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeRightLessThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeTopEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeTopEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeTopGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeTopGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeTopLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeTopLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeBottomEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeBottomEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeBottomGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeBottomGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeBottomLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeBottomLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_makeWidthEqualToWidth:(CGFloat)width;
- (void)yc_makeWidthEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeWidthEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_makeWidthGreaterThanOrEqualToWidth:(CGFloat)width;
- (void)yc_makeWidthGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeWidthGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_makeWidthLessThanOrEqualToWidth:(CGFloat)width;
- (void)yc_makeWidthLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeWidthLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_makeHeightEqualToHeight:(CGFloat)height;
- (void)yc_makeHeightEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeHeightEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_makeHeightGreaterThanOrEqualToHeight:(CGFloat)height;
- (void)yc_makeHeightGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeHeightGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_makeHeightLessThanOrEqualToHeight:(CGFloat)height;
- (void)yc_makeHeightLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeHeightLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_makeSizeEqualToWidth:(CGFloat)width height:(CGFloat)height;
- (void)yc_makeEdgesEqualToView:(UIView * _Nonnull)view left:(CGFloat)left right:(CGFloat)right top:(CGFloat)top bottom:(CGFloat)bottom;
- (void)yc_makeCenterXEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeCenterYEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_makeCenterEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateLeftEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateLeftEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateLeftEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateLeftGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateLeftGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateLeftGreaterThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateLeftLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateLeftLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateLeftLessThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateRightEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateRightEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateRightEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateRightGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateRightGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateRightGreaterThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateRightLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateRightLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateRightLessThanOrEqualToView:(UIView * _Nonnull)view isSafeArea:(BOOL)isSafeArea attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateTopEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateTopEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateTopGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateTopGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateTopLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateTopLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateBottomEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateBottomEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateBottomGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateBottomGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateBottomLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateBottomLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset;
- (void)yc_updateWidthEqualToWidth:(CGFloat)width;
- (void)yc_updateWidthEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateWidthEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_updateWidthGreaterThanOrEqualToWidth:(CGFloat)width;
- (void)yc_updateWidthGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateWidthGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_updateWidthLessThanOrEqualToWidth:(CGFloat)width;
- (void)yc_updateWidthLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateWidthLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_updateHeightEqualToHeight:(CGFloat)height;
- (void)yc_updateHeightEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateHeightEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_updateHeightGreaterThanOrEqualToHeight:(CGFloat)height;
- (void)yc_updateHeightGreaterThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateHeightGreaterThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_updateHeightLessThanOrEqualToHeight:(CGFloat)height;
- (void)yc_updateHeightLessThanOrEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateHeightLessThanOrEqualToView:(UIView * _Nonnull)view attribute:(enum YCLayoutAttribute)attribute offset:(CGFloat)offset dividedBy:(CGFloat)dividedBy;
- (void)yc_updateSizeEqualToWidth:(CGFloat)width height:(CGFloat)height;
- (void)yc_updateEdgesEqualToView:(UIView * _Nonnull)view left:(CGFloat)left right:(CGFloat)right top:(CGFloat)top bottom:(CGFloat)bottom;
- (void)yc_updateCenterXEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateCenterYEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
- (void)yc_updateCenterEqualToView:(UIView * _Nonnull)view offset:(CGFloat)offset;
@end


SWIFT_CLASS("_TtC9CoinTools17YCChartMarkerView")
@interface YCChartMarkerView : ChartMarkerView
/// 是否固定夜间模式
@property (nonatomic) BOOL isIndividualNightMode;
/// 标记类型
@property (nonatomic) YCChartMarkerType markerType;
/// 对应类型的数据
@property (nonatomic) id _Nullable data;
- (void)drawWithContext:(CGContextRef _Nonnull)context point:(CGPoint)point;
- (void)refreshContentWithEntry:(ChartDataEntry * _Nonnull)entry highlight:(ChartHighlight * _Nonnull)highlight;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

/// 为了兼容OC调用SnapKit
typedef SWIFT_ENUM(NSInteger, YCLayoutAttribute, open) {
  YCLayoutAttributeLeft = 1,
  YCLayoutAttributeRight = 2,
  YCLayoutAttributeTop = 3,
  YCLayoutAttributeBottom = 4,
  YCLayoutAttributeWidth = 5,
  YCLayoutAttributeHeight = 6,
  YCLayoutAttributeCenterX = 7,
  YCLayoutAttributeCenterY = 8,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
